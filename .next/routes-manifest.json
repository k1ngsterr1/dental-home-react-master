{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:file((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+)/",
      "destination": "/:file",
      "internal": true,
      "missing": [
        {
          "type": "header",
          "key": "x-nextjs-data"
        }
      ],
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+))/$"
    },
    {
      "source": "/:notfile((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+)",
      "destination": "/:notfile/",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+))$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/services/[slug]",
      "regex": "^/services/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/services/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/404",
      "regex": "^/404(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/404(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/children-dental",
      "regex": "^/children\\-dental(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/children\\-dental(?:/)?$"
    },
    {
      "page": "/contacts",
      "regex": "^/contacts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contacts(?:/)?$"
    },
    {
      "page": "/doctors",
      "regex": "^/doctors(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/doctors(?:/)?$"
    },
    {
      "page": "/index-example",
      "regex": "^/index\\-example(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/index\\-example(?:/)?$"
    },
    {
      "page": "/prices",
      "regex": "^/prices(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/prices(?:/)?$"
    },
    {
      "page": "/reviews",
      "regex": "^/reviews(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reviews(?:/)?$"
    }
  ],
  "dataRoutes": [
    {
      "page": "/",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/index\\.json$"
    },
    {
      "page": "/about",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/about\\.json$"
    },
    {
      "page": "/children-dental",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/children-dental\\.json$"
    },
    {
      "page": "/contacts",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/contacts\\.json$"
    },
    {
      "page": "/doctors",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/doctors\\.json$"
    },
    {
      "page": "/index-example",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/index-example\\.json$"
    },
    {
      "page": "/prices",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/prices\\.json$"
    },
    {
      "page": "/reviews",
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/reviews\\.json$"
    },
    {
      "page": "/services/[slug]",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "dataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/services/([^/]+?)\\.json$",
      "namedDataRouteRegex": "^/_next/data/ACG9BVat5nxOyezROcSiy/services/(?<nxtPslug>[^/]+?)\\.json$"
    }
  ],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}